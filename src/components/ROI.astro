<section class="max-w-xl mx-auto text-center">
    <h2 class="text-2xl font-bold mb-2">See What Your Investment Could Earn</h2>
    <p class="mb-6 text-sm text-gray-600">Adjust the slider to see your projected 5-year return based on an 18% annual return.</p>

    <div class="mb-4">
      <label for="investment" class="block text-sm font-medium mb-2">Investment Amount: <span id="investmentValue" class="font-bold">$1,000</span></label>
      <input type="range" id="investment" min="100" max="50000" step="100" value="1000" class="w-full accent-green-600" />
    </div>

    <div class="bg-gray-100 rounded-xl p-6 shadow-md space-y-4">
      <div>
        <p class="text-sm text-gray-600">Projected 5-Year Total Return</p>
        <p id="totalReturn" class="text-xl font-semibold">$2,287</p>
      </div>
      <div>
        <p class="text-sm text-gray-600">Estimated Annualized Return</p>
        <p class="text-xl font-semibold">18%</p>
      </div>
      <div>
        <p class="text-sm text-gray-600">Total Growth Multiple</p>
        <p id="growthMultiple" class="text-xl font-semibold">2.28x</p>
      </div>
    </div>

    <div class="mt-6">
      <a href="#" class="bg-green-600 text-white px-6 py-3 rounded-full font-semibold hover:bg-green-700 transition">Join Mainstreet Capital</a>
    </div>
  </section>

  <script>
    const slider = document.getElementById('investment');
    const investmentValue = document.getElementById('investmentValue');
    const totalReturn = document.getElementById('totalReturn');
    const growthMultiple = document.getElementById('growthMultiple');

    const calculateReturns = (amount) => {
      const rate = 0.18;
      const years = 5;
      const fv = amount * Math.pow(1 + rate, years);
      const multiple = fv / amount;

      investmentValue.textContent = `$${amount.toLocaleString()}`;
      totalReturn.textContent = `$${fv.toFixed(0).toLocaleString()}`;
      growthMultiple.textContent = `${multiple.toFixed(2)}x`;
    };

    slider.addEventListener('input', (e) => {
      calculateReturns(parseInt(e.target.value, 10));
    });

    // Initial render
    calculateReturns(parseInt(slider.value, 10));
  </script>